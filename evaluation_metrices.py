# -*- coding: utf-8 -*-
"""Evaluation Metrices.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1da5gMPXOCBJvacNsXImPZtP3ga4MXTRb

**1. Import Libraries**
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

"""**2. Create Datasets**"""

np.random.seed(42)
X = np.random.rand(50,1)
y = 3 * X.squeeze() + 2 + 0.1 * np.random.rand(50)

"""**3. Split**"""

X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.2, random_state=42)

"""**4. Create Linear Regression Model**"""

model = LinearRegression()

"""**5. Train the model**"""

model.fit(X_train,y_train)

"""**6. Make Predictions**"""

y_pred = model.predict(X_test)

"""**7. Evaluate**"""

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("Mean Absolute Error:", mae)
print("Mean Squared Error:", mse)
print("R-squared:", r2)

"""**8. Visualization**"""

import matplotlib.pyplot as plt
plt.scatter(X_test, y_test, color='blue')
plt.plot(X_test, y_pred, color='red')
plt.title('Linear Regression')
plt.xlabel('X')
plt.ylabel('y')
plt.show()
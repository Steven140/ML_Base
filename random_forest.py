# -*- coding: utf-8 -*-
"""Random Forest.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Yyc6XvElGUpRa_tfZ7hjTJnZhv26kb6m

**1. Import Libraries**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, confusion_matrix
from sklearn.model_selection import train_test_split
from sklearn.datasets import make_classification

"""**2. Create Dataset**"""

X,y = make_classification(n_samples=1000, n_features=10, n_informative=3, n_classes=2, random_state=42)

"""**3. Spilt**"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""**4. Create Random Forest Classifier**"""

rf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)

"""**5. Train the model**"""

rf_classifier.fit(X_train, y_train)

"""**6. Make predictions**"""

rf_classifier.predict(X_test)

"""**7. Calculate accuracy**"""

accuracy = accuracy_score(y_test, rf_classifier.predict(X_test))
print(f"Accuracy: {accuracy}")

"""**8. Confusion Matrix**"""

conf_matrix = confusion_matrix(y_test, rf_classifier.predict(X_test))
print("Confusion Matrix:")
print(conf_matrix)

"""**9. Visualize**"""

import matplotlib.pyplot as plt
import numpy as np
plt.figure(figsize=(8, 6))
plt.imshow(conf_matrix, interpolation='nearest', cmap=plt.cm.Blues)
plt.title("Confusion Matrix")
plt.colorbar()
tick_marks = np.arange(2)
plt.xticks(tick_marks, ["Class 0", "Class 1"], rotation=45)
plt.yticks(tick_marks, ["Class 0", "Class 1"])
plt.xlabel("Predicted Label")
plt.ylabel("True Label")
for i in range(2):
  for j in range(2):
    plt.text(j, i, format(conf_matrix[i, j], 'd'),
             horizontalalignment="center",
             color="white" if conf_matrix[i, j] > conf_matrix.max() / 2. else "black")
plt.tight_layout()
plt.show()